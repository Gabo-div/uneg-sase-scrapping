/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardTeachersImport } from './routes/dashboard/teachers'
import { Route as DashboardStudentImport } from './routes/dashboard/student'
import { Route as DashboardScheduleImport } from './routes/dashboard/schedule'
import { Route as DashboardPensumImport } from './routes/dashboard/pensum'
import { Route as DashboardPaymentImport } from './routes/dashboard/payment'
import { Route as DashboardCoursesImport } from './routes/dashboard/courses'

// Create/Update Routes

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardTeachersRoute = DashboardTeachersImport.update({
  id: '/teachers',
  path: '/teachers',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardStudentRoute = DashboardStudentImport.update({
  id: '/student',
  path: '/student',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardScheduleRoute = DashboardScheduleImport.update({
  id: '/schedule',
  path: '/schedule',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardPensumRoute = DashboardPensumImport.update({
  id: '/pensum',
  path: '/pensum',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardPaymentRoute = DashboardPaymentImport.update({
  id: '/payment',
  path: '/payment',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardCoursesRoute = DashboardCoursesImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => DashboardRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/courses': {
      id: '/dashboard/courses'
      path: '/courses'
      fullPath: '/dashboard/courses'
      preLoaderRoute: typeof DashboardCoursesImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/payment': {
      id: '/dashboard/payment'
      path: '/payment'
      fullPath: '/dashboard/payment'
      preLoaderRoute: typeof DashboardPaymentImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/pensum': {
      id: '/dashboard/pensum'
      path: '/pensum'
      fullPath: '/dashboard/pensum'
      preLoaderRoute: typeof DashboardPensumImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/schedule': {
      id: '/dashboard/schedule'
      path: '/schedule'
      fullPath: '/dashboard/schedule'
      preLoaderRoute: typeof DashboardScheduleImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/student': {
      id: '/dashboard/student'
      path: '/student'
      fullPath: '/dashboard/student'
      preLoaderRoute: typeof DashboardStudentImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/teachers': {
      id: '/dashboard/teachers'
      path: '/teachers'
      fullPath: '/dashboard/teachers'
      preLoaderRoute: typeof DashboardTeachersImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteRouteChildren {
  DashboardCoursesRoute: typeof DashboardCoursesRoute
  DashboardPaymentRoute: typeof DashboardPaymentRoute
  DashboardPensumRoute: typeof DashboardPensumRoute
  DashboardScheduleRoute: typeof DashboardScheduleRoute
  DashboardStudentRoute: typeof DashboardStudentRoute
  DashboardTeachersRoute: typeof DashboardTeachersRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardCoursesRoute: DashboardCoursesRoute,
  DashboardPaymentRoute: DashboardPaymentRoute,
  DashboardPensumRoute: DashboardPensumRoute,
  DashboardScheduleRoute: DashboardScheduleRoute,
  DashboardStudentRoute: DashboardStudentRoute,
  DashboardTeachersRoute: DashboardTeachersRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/courses': typeof DashboardCoursesRoute
  '/dashboard/payment': typeof DashboardPaymentRoute
  '/dashboard/pensum': typeof DashboardPensumRoute
  '/dashboard/schedule': typeof DashboardScheduleRoute
  '/dashboard/student': typeof DashboardStudentRoute
  '/dashboard/teachers': typeof DashboardTeachersRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard/courses': typeof DashboardCoursesRoute
  '/dashboard/payment': typeof DashboardPaymentRoute
  '/dashboard/pensum': typeof DashboardPensumRoute
  '/dashboard/schedule': typeof DashboardScheduleRoute
  '/dashboard/student': typeof DashboardStudentRoute
  '/dashboard/teachers': typeof DashboardTeachersRoute
  '/dashboard': typeof DashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/courses': typeof DashboardCoursesRoute
  '/dashboard/payment': typeof DashboardPaymentRoute
  '/dashboard/pensum': typeof DashboardPensumRoute
  '/dashboard/schedule': typeof DashboardScheduleRoute
  '/dashboard/student': typeof DashboardStudentRoute
  '/dashboard/teachers': typeof DashboardTeachersRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/courses'
    | '/dashboard/payment'
    | '/dashboard/pensum'
    | '/dashboard/schedule'
    | '/dashboard/student'
    | '/dashboard/teachers'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard/courses'
    | '/dashboard/payment'
    | '/dashboard/pensum'
    | '/dashboard/schedule'
    | '/dashboard/student'
    | '/dashboard/teachers'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard/courses'
    | '/dashboard/payment'
    | '/dashboard/pensum'
    | '/dashboard/schedule'
    | '/dashboard/student'
    | '/dashboard/teachers'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/courses",
        "/dashboard/payment",
        "/dashboard/pensum",
        "/dashboard/schedule",
        "/dashboard/student",
        "/dashboard/teachers",
        "/dashboard/"
      ]
    },
    "/dashboard/courses": {
      "filePath": "dashboard/courses.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/payment": {
      "filePath": "dashboard/payment.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/pensum": {
      "filePath": "dashboard/pensum.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/schedule": {
      "filePath": "dashboard/schedule.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/student": {
      "filePath": "dashboard/student.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/teachers": {
      "filePath": "dashboard/teachers.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
